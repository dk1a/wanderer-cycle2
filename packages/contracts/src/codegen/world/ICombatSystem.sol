// SPDX-License-Identifier: MIT
pragma solidity >=0.8.24;

/* Autogenerated file. Do not edit manually. */

import { CombatAction, CombatActor } from "../../CustomTypes.sol";
import { CombatResult } from "../common.sol";

/**
 * @title ICombatSystem
 * @author MUD (https://mud.dev) by Lattice (https://lattice.xyz)
 * @dev This interface is automatically generated from the corresponding system contract. Do not edit manually.
 */
interface ICombatSystem {
  error CombatSystem_InvalidActionsLength();
  error CombatSystem_ResidualDuration();

  function combat__actPVERound(
    bytes32 initiatorEntity,
    bytes32 retaliatorEntity,
    CombatAction[] memory initiatorActions,
    CombatAction[] memory retaliatorActions
  ) external returns (CombatResult result);

  function combat__actCombatRound(
    CombatActor memory initiator,
    CombatActor memory retaliator
  ) external returns (CombatResult result);

  function combat__activateCombat(bytes32 initiatorEntity, bytes32 retaliatorEntity, uint32 maxRounds) external;

  function combat__deactivateCombat(bytes32 initiatorEntity) external;
}
